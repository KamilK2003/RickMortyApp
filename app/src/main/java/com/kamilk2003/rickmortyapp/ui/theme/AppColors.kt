package com.kamilk2003.rickmortyapp.ui.theme

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

val primaryLight = Color(0xFF654B31)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFF8D6F52)
val onPrimaryContainerLight = Color(0xFFFFFFFF)
val secondaryLight = Color(0xFF675D53)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFFF3E4D8)
val onSecondaryContainerLight = Color(0xFF524940)
val tertiaryLight = Color(0xFF645D58)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFFC9C0BA)
val onTertiaryContainerLight = Color(0xFF37322E)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF410002)
val backgroundLight = Color(0xFFFFF8F5)
val onBackgroundLight = Color(0xFF1E1B19)
val surfaceLight = Color(0xFFFFF8F5)
val onSurfaceLight = Color(0xFF1E1B19)
val surfaceVariantLight = Color(0xFFEFE0D4)
val onSurfaceVariantLight = Color(0xFF4F453D)
val outlineLight = Color(0xFF80756C)
val outlineVariantLight = Color(0xFFD2C4B9)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF33302D)
val inverseOnSurfaceLight = Color(0xFFF7EFEB)
val inversePrimaryLight = Color(0xFFE4C09F)

val primaryDark = Color(0xFFE4C09F)
val onPrimaryDark = Color(0xFF422C14)
val primaryContainerDark = Color(0xFF896B4F)
val onPrimaryContainerDark = Color(0xFFFFFFFF)
val secondaryDark = Color(0xFFFFFFFF)
val onSecondaryDark = Color(0xFF372F27)
val secondaryContainerDark = Color(0xFFE0D2C6)
val onSecondaryContainerDark = Color(0xFF473E35)
val tertiaryDark = Color(0xFFE4DAD4)
val onTertiaryDark = Color(0xFF352F2B)
val tertiaryContainerDark = Color(0xFFBAB1AB)
val onTertiaryContainerDark = Color(0xFF2B2622)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF161311)
val onBackgroundDark = Color(0xFFE9E1DD)
val surfaceDark = Color(0xFF161311)
val onSurfaceDark = Color(0xFFE9E1DD)
val surfaceVariantDark = Color(0xFF4F453D)
val onSurfaceVariantDark = Color(0xFFD2C4B9)
val outlineDark = Color(0xFF9B8E84)
val outlineVariantDark = Color(0xFF4F453D)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFE9E1DD)
val inverseOnSurfaceDark = Color(0xFF33302D)
val inversePrimaryDark = Color(0xFF75593E)

val lightScheme = lightColorScheme(
    primary = primaryLight,
    onPrimary = onPrimaryLight,
    primaryContainer = primaryContainerLight,
    onPrimaryContainer = onPrimaryContainerLight,
    secondary = secondaryLight,
    onSecondary = onSecondaryLight,
    secondaryContainer = secondaryContainerLight,
    onSecondaryContainer = onSecondaryContainerLight,
    tertiary = tertiaryLight,
    onTertiary = onTertiaryLight,
    tertiaryContainer = tertiaryContainerLight,
    onTertiaryContainer = onTertiaryContainerLight,
    error = errorLight,
    onError = onErrorLight,
    errorContainer = errorContainerLight,
    onErrorContainer = onErrorContainerLight,
    background = backgroundLight,
    onBackground = onBackgroundLight,
    surface = surfaceLight,
    onSurface = onSurfaceLight,
    surfaceVariant = surfaceVariantLight,
    onSurfaceVariant = onSurfaceVariantLight,
    outline = outlineLight,
    outlineVariant = outlineVariantLight,
    scrim = scrimLight,
    inverseSurface = inverseSurfaceLight,
    inverseOnSurface = inverseOnSurfaceLight,
    inversePrimary = inversePrimaryLight
)

val darkScheme = darkColorScheme(
    primary = primaryDark,
    onPrimary = onPrimaryDark,
    primaryContainer = primaryContainerDark,
    onPrimaryContainer = onPrimaryContainerDark,
    secondary = secondaryDark,
    onSecondary = onSecondaryDark,
    secondaryContainer = secondaryContainerDark,
    onSecondaryContainer = onSecondaryContainerDark,
    tertiary = tertiaryDark,
    onTertiary = onTertiaryDark,
    tertiaryContainer = tertiaryContainerDark,
    onTertiaryContainer = onTertiaryContainerDark,
    error = errorDark,
    onError = onErrorDark,
    errorContainer = errorContainerDark,
    onErrorContainer = onErrorContainerDark,
    background = backgroundDark,
    onBackground = onBackgroundDark,
    surface = surfaceDark,
    onSurface = onSurfaceDark,
    surfaceVariant = surfaceVariantDark,
    onSurfaceVariant = onSurfaceVariantDark,
    outline = outlineDark,
    outlineVariant = outlineVariantDark,
    scrim = scrimDark,
    inverseSurface = inverseSurfaceDark,
    inverseOnSurface = inverseOnSurfaceDark,
    inversePrimary = inversePrimaryDark
)